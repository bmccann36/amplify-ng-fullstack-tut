type Restaurant @model @auth(rules: [{ allow: owner }])  {
  id: ID!
  name: String!
  description: String!
  city: String!
}

# type Query {
# echo(msg: String): String @function(name: "xwordGqlBackend-${env}")
# }

type Query {
  me: User @function(name: "xwordGqlBackend-${env}")
  echo(msg: String): String @function(name: "xwordGqlBackend-${env}")
}
# These types derived from https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html#adminGetUser-property
type User {
  Username: String!
  UserAttributes: [Value]
  UserCreateDate: String
  UserLastModifiedDate: String
  Enabled: Boolean
  UserStatus: UserStatus
  MFAOptions: [MFAOption]
  PreferredMfaSetting: String
  UserMFASettingList: String
}
type Value {
  Name: String!
  Value: String
}
type MFAOption {
  DeliveryMedium: String
  AttributeName: String
}
enum UserStatus {
  UNCONFIRMED
  CONFIRMED
  ARCHIVED
  COMPROMISED
  UNKNOWN
  RESET_REQUIRED
  FORCE_CHANGE_PASSWORD
}
